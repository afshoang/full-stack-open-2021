{"version":3,"sources":["services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personServices","getAll","axios","get","then","res","data","createPerson","newObject","post","response","updatePerson","id","put","deletePerson","delete","Persons","persons","handleDelete","map","person","name","number","onClick","PersonForm","addPhoneBook","newName","handleChangeName","newPhone","handleChangePhone","onSubmit","value","onChange","required","type","Filter","keyword","handleChangeKeyword","Notification","message","str","className","variant","App","useState","setPersons","setNewName","setNewPhone","setKeyword","setMessage","useEffect","initialPersons","filteredPersons","filter","toLowerCase","includes","e","target","preventDefault","existedPhone","find","phoneBookObj","window","confirm","returnPerson","catch","error","p","setTimeout","returnPersons","deletedPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08af550b.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = 'http://localhost:3001/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst createPerson = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst updatePerson = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst personServices = {\r\n  getAll,\r\n  createPerson,\r\n  updatePerson,\r\n  deletePerson,\r\n};\r\n\r\nexport default personServices;\r\n","import React from 'react';\r\n\r\nconst Persons = ({ persons, handleDelete }) => {\r\n  return persons.map((person) => {\r\n    return (\r\n      <p key={person.name}>\r\n        {person.name}: {person.number}{' '}\r\n        <button onClick={() => handleDelete(person)}>delete</button>\r\n      </p>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n  addPhoneBook,\r\n  newName,\r\n  handleChangeName,\r\n  newPhone,\r\n  handleChangePhone,\r\n}) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={addPhoneBook}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleChangeName} required />\r\n        </div>\r\n        <div>\r\n          phone:{' '}\r\n          <input value={newPhone} onChange={handleChangePhone} required />\r\n        </div>\r\n\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ keyword, handleChangeKeyword }) => {\r\n  return (\r\n    <div>\r\n      filter show with: <input value={keyword} onChange={handleChangeKeyword} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message.str === '') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`notification ${message.variant}`}>{`${message.str}`}</div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport personServices from './services/persons';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n\n  const [keyword, setKeyword] = useState('');\n  const [message, setMessage] = useState({ str: '', variant: '' });\n\n  useEffect(() => {\n    personServices.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  // Add new phonebook\n  const addPhoneBook = (e) => {\n    e.preventDefault();\n    const existedPhone = persons.find((person) => person.name === newName);\n\n    const phoneBookObj = {\n      name: newName,\n      number: newPhone,\n    };\n\n    // if existed phone book => update number\n    if (existedPhone) {\n      const msg = window.confirm(\n        `${existedPhone.name} already added to phonebook, replace the old number with the new one?`\n      );\n      if (msg) {\n        // update person\n        personServices\n          .updatePerson(existedPhone.id, phoneBookObj)\n          .then((returnPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === returnPerson.id ? returnPerson : person\n              )\n            );\n          })\n          .catch((error) => {\n            setPersons(persons.filter((p) => p.id !== existedPhone.id));\n            setMessage({\n              str: ` ${existedPhone.name} was already deleted from server`,\n              variant: 'danger',\n            });\n            setTimeout(() => {\n              setMessage({ str: '', variant: 'success' });\n            }, 5000);\n          });\n      }\n    } else {\n      // create new person\n      personServices.createPerson(phoneBookObj).then((returnPersons) => {\n        setPersons([...persons, returnPersons]);\n\n        setMessage({\n          str: ` Added ${returnPersons.name}`,\n          variant: 'success',\n        });\n        setTimeout(() => {\n          setMessage({ str: '', variant: '' });\n        }, 5000);\n      });\n    }\n    // clear input\n    setNewName('');\n    setNewPhone('');\n  };\n\n  // Delete phonebook\n  const handleDelete = ({ name, id }) => {\n    const result = window.confirm(`Delete ${name}`);\n    if (result) {\n      personServices.deletePerson(id);\n\n      const deletedPersons = persons.filter((p) => p.id !== id);\n\n      // message: success delete\n      setMessage({\n        str: ` Deleted ${name}`,\n        variant: 'danger',\n      });\n      setTimeout(() => {\n        setMessage({ str: '', variant: '' });\n      }, 5000);\n\n      setPersons(deletedPersons);\n    }\n  };\n\n  const handleChangeName = (e) => {\n    setNewName(e.target.value);\n  };\n  const handleChangePhone = (e) => {\n    setNewPhone(e.target.value);\n  };\n\n  const handleChangeKeyword = (e) => {\n    setKeyword(e.target.value);\n  };\n\n  // filter person by name\n  const filteredPersons = persons.filter((person) => {\n    return person.name.toLowerCase().includes(keyword);\n  });\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} />\n\n      <Filter keyword={keyword} handleChangeKeyword={handleChangeKeyword} />\n\n      <h3>add a new</h3>\n      <PersonForm\n        addPhoneBook={addPhoneBook}\n        newName={newName}\n        handleChangeName={handleChangeName}\n        newPhone={newPhone}\n        handleChangePhone={handleChangePhone}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}